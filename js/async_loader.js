// Generated by CoffeeScript 1.8.0
(function() {
  var AsyncLoader;

  AsyncLoader = (function() {
    function AsyncLoader() {}

    AsyncLoader.prototype.loadImage = function(url) {
      var loadingImgBlob, xhr;
      xhr = new XMLHttpRequest();
      xhr.onprogress = (function(_this) {
        return function(event) {
          var percentComplete;
          if (event.lengthComputable) {
            percentComplete = Math.round(event.loaded / event.total * 100);
            return loadingImgBlob.notify(percentComplete);
          }
        };
      })(this);
      xhr.onreadystatechange = (function(_this) {
        return function() {
          var blob, contentType, imgBlobUrl;
          if (xhr.readyState === 4) {
            if ((xhr.status >= 200 && xhr.status <= 300) || xhr.status === 304) {
              contentType = xhr.getResponseHeader('Content-Type');
              contentType = contentType != null ? contentType : 'application/octet-binary';
              blob = new Blob([xhr.response], {
                type: contentType
              });
              imgBlobUrl = _this.loadingComplete(blob);
              return loadingImgBlob.resolve(imgBlobUrl);
            }
          }
        };
      })(this);
      xhr.responseType = 'arraybuffer';
      xhr.open('GET', url, true);
      xhr.send();
      loadingImgBlob = new $.Deferred();
      return {
        downloading: loadingImgBlob,
        xhr: xhr
      };
    };

    AsyncLoader.prototype.loadingComplete = function(blob) {
      var imgBlobUrl;
      imgBlobUrl = window.URL.createObjectURL(blob);
      return imgBlobUrl;
    };

    window.AsyncLoader = AsyncLoader;

    return AsyncLoader;

  })();

}).call(this);
